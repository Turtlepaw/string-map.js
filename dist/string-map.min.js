/*! string-map v0.0.3 <https://github.com/luizbills/string-map.js>
 *  Copyright 2014 Luiz "Bills" <luizpbills@gmail.com>
 *  Licensed under MIT License
 */
!function(a){"function"==typeof define&&define.amd?define(a):"object"==typeof exports?module.exports=a():window.StringMap=a()}(function(){"use strict";var a=function(a,b,c){b&&Object.defineProperties(a,b),c&&Object.defineProperties(a.prototype,c)},b=function(){var b=function(){this._values={}};return a(b,null,{get:{writable:!0,value:function(a){var b=this._values[a];return null!=b?b:null}},set:{writable:!0,value:function(a,b){if(a instanceof Object)for(var c in a)this._values[c]=a[c];else this._values[a]=b}},exists:{writable:!0,value:function(a){return null!=this._values[a]}},remove:{writable:!0,value:function(a){return this.exists(a)?delete this._values[a]:!1}},keys:{writable:!0,value:function(){var a=[];for(var b in this._values)this.exists(b)&&a.push(b);return a}},toString:{writable:!0,value:function(a,b){return a?JSON.stringify(this._values,null,b||"	"):JSON.stringify(this._values)}}}),b}();return b});